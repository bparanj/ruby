{"remainingRequest":"/home/bparanj/work/bparanj.gitlab.io/node_modules/vue-loader/lib/index.js??ref--1-1!/home/bparanj/work/bparanj.gitlab.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/bparanj/work/bparanj.gitlab.io/docs/PROC-CONVERSION.md?vue&type=template&id=7d568254&","dependencies":[{"path":"/home/bparanj/work/bparanj.gitlab.io/docs/PROC-CONVERSION.md","mtime":1541523588300},{"path":"/home/bparanj/work/bparanj.gitlab.io/node_modules/cache-loader/dist/cjs.js","mtime":1541188364181},{"path":"/home/bparanj/work/bparanj.gitlab.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541188366278},{"path":"/home/bparanj/work/bparanj.gitlab.io/node_modules/cache-loader/dist/cjs.js","mtime":1541188364181},{"path":"/home/bparanj/work/bparanj.gitlab.io/node_modules/vue-loader/lib/index.js","mtime":1541188366278},{"path":"/home/bparanj/work/bparanj.gitlab.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541188390625}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"proc-block-conversions\"><a class=\"header-anchor\" href=\"#proc-block-conversions\" aria-hidden=\"true\">#</a> Proc-Block Conversions</h2>\n<h3 id=\"executing-the-block\"><a class=\"header-anchor\" href=\"#executing-the-block\" aria-hidden=\"true\">#</a> Executing the Block</h3>\n<p>Ruby is capable of executing a block by taking a block in a method.</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token keyword\">def</span> greeter\n  <span class=\"token keyword\">yield</span>\n<span class=\"token keyword\">end</span>\n\ngreeter <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><p>We need to use <code>yield</code> inside the greeter method to execute the code in the block.</p>\n<h3 id=\"ruby-creating-a-proc-object-from-block\"><a class=\"header-anchor\" href=\"#ruby-creating-a-proc-object-from-block\" aria-hidden=\"true\">#</a> Ruby Creating a Proc Object from Block</h3>\n<p>Ruby can create a Proc object from a Block for us. We need to prefix the method argument with ampersand.</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n  block\n<span class=\"token keyword\">end</span>\n\ngreet <span class=\"token operator\">=</span> greeter <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\ngreet<span class=\"token punctuation\">.</span>call\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><div class=\"tip custom-block\"><p class=\"custom-block-title\">SELF DISCOVERY</p>\n<p>Print the class name of the block before the block is returned. What is the output?</p>\n</div>\n<p>We can also call the Proc inside the method.</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n  block<span class=\"token punctuation\">.</span>call\n<span class=\"token keyword\">end</span>\n\ngreeter  <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"converting-a-proc-to-a-block\"><a class=\"header-anchor\" href=\"#converting-a-proc-to-a-block\" aria-hidden=\"true\">#</a> Converting a Proc to a Block</h3>\n<p>If we prefix a Proc object with an ampersand, it becomes a block.</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n  <span class=\"token builtin\">Proc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\ngreet <span class=\"token operator\">=</span> greeter <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\ngreet<span class=\"token punctuation\">.</span>call\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><p>In line 1, the block is converted to a Proc. In line 2, the Proc constructor takes a Proc object and converts it to a block. Compare the above example to the following:</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code>greet <span class=\"token operator\">=</span> <span class=\"token builtin\">Proc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\ngreet<span class=\"token punctuation\">.</span>call\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p>The line:</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token builtin\">Proc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>is equivalent to :</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token builtin\">Proc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>In line 1 <code>greeter(&amp;block)</code>, the <code>greeter</code> method is not taking an argument. Eventhough the syntax looks like an argument block is passed in because we are using the brackets ( ). As you can see when we call the greeter method, we are not passing an argument:</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code>greeter <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>The greeter does not have an argument. Only the block is provided. Similarly, the Proc constructor is not taking an argument:</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token builtin\">Proc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>The constructor is taking a block.</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n  p block<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span>\n  <span class=\"token class-name\">Proc<span class=\"token punctuation\">.</span>new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><p>This will print <code>Proc</code>. When the &amp; is prefixed to a Proc object, it gets converted to a block.</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">Block to Proc</p>\n<p>Prefixing &amp; to a block converts a block to a Proc.</p>\n</div>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">Proc to Block</p>\n<p>Prefixing &amp; to a Proc object converts a Proc object to a block</p>\n</div>\n<h3 id=\"converting-a-proc-to-a-block-2\"><a class=\"header-anchor\" href=\"#converting-a-proc-to-a-block-2\" aria-hidden=\"true\">#</a> Converting a Proc to a Block</h3>\n<p>A simple example illustrating how to convert a Proc object to a block by prefixing a Proc object with ampersand.</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token keyword\">def</span> greeter\n  <span class=\"token keyword\">yield</span>\n<span class=\"token keyword\">end</span>\n\nproc <span class=\"token operator\">=</span> <span class=\"token builtin\">Proc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>proc<span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><p>Compare this with the first code example.</p>\n<!--beforebegin--><div class=\"language-ruby line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-ruby\"><code><span class=\"token keyword\">def</span> greeter\n  <span class=\"token keyword\">yield</span>\n<span class=\"token keyword\">end</span>\n\ngreeter <span class=\"token punctuation\">{</span> puts <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><div class=\"tip custom-block\"><p class=\"custom-block-title\">BEHIND THE SCENES</p>\n<p>Ruby converts</p>\n<p>greeter(&amp;proc)</p>\n<p>to</p>\n<p>greeter { puts 'hello' }</p>\n</div>\n</div>\n",null]}